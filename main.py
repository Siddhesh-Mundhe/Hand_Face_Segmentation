# main.py

import cv2
from detectors.detector import YOLODetector
from sam2_api.sam2_client import segment_with_sam2
from utils.visualizer import overlay_masks

def run_pipeline(image_path):
    print("[INFO] Loading image...")
    image = cv2.imread(image_path)

    if image is None:
        raise FileNotFoundError(f"[❌] Image not found at: {image_path}")

    # Step 1: Detect face & hand bounding boxes
    print("[INFO] Detecting face and hand regions...")
    detector = YOLODetector()
    detections = detector.detect_faces_and_hands(image)

    if not detections:
        print("[⚠️] No face or hand detected.")
        return

    print(f"[INFO] Detected {len(detections)} region(s): {detections}")

    # Step 2: Run local SAM model for segmentation
    print("[INFO] Segmenting with local SAM model...")
    masks = segment_with_sam2(image_path, detections)

    if not masks:
        print("[⚠️] No masks generated by SAM.")
        return

    # Step 3: Overlay masks on image
    print("[INFO] Overlaying masks...")
    result_image = overlay_masks(image_path, masks)

    output_path = "samples/output.jpeg"
    result_image.save(output_path)
    print(f"[✅] Output saved at: {output_path}")

if __name__ == "__main__":
    run_pipeline("samples/input.jpeg")
